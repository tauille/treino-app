plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    // Google Services plugin (será necessário após configurar google-services.json)
    //id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.treinoapp.treino_app"
    compileSdk 36
    ndkVersion "27.0.12077973"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (com.example.treino_app).
        applicationId "com.treinoapp.treino_app"
        
        // ===== VERSÕES MÍNIMAS PARA GOOGLE SIGN IN =====
        minSdkVersion flutter.minSdkVersion                    // Mínimo para Google Sign In
        targetSdkVersion 36                 // Versão alvo atual
        
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // ===== CONFIGURAÇÕES ADICIONAIS =====
        multiDexEnabled true                // Para evitar limite de métodos
        
        // ===== PROGUARD/R8 =====
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    // ===== TIPOS DE BUILD =====
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            
            // ===== OTIMIZAÇÕES PARA RELEASE =====
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // ===== CONFIGURAÇÕES DE RELEASE =====
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
        
        debug {
            // Configurações para debug
            minifyEnabled false
            debuggable true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // ===== DEPENDÊNCIAS BÁSICAS FLUTTER =====
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    
    // ===== GOOGLE SERVICES =====
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'com.google.firebase:firebase-bom:32.7.0'
    
    // ===== ANDROIDX (necessário para compatibilidade) =====
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    
    // ===== MATERIAL DESIGN =====
    implementation 'com.google.android.material:material:1.11.0'
    
    // ===== NETWORK SECURITY =====
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
}
